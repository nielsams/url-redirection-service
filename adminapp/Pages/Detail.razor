@page "/detail/{url}"
@attribute [Authorize(Roles = "Redirect.Admin")]
@using RedirectAdmin.Data
@using RedirectAdmin.Models
@inject RedirectDataTable RedirectDataService

<h1>Details for <i>@Url</i></h1>

@if (URLData == null)
{
    <p><em>@LoadMessage</em></p>
}
else
{
    @if (LastSubmitResult != null)
    {
        <p>@LastSubmitResult</p>
    }
    <EditForm EditContext="editContext" OnValidSubmit="@HandleValidSubmit">
        <div class="form-group">
            <label for="url">Redirect URL</label>
            <InputText @bind-Value=URLData.RedirectUrl class="form-control" id="url" />
        </div>
        <input type="button" class="btn btn-danger" value="Delete" @onclick="(() => DeleteEntity(URLData))" disabled="@(URLData.PartitionKey == null)" />
        <input type="submit" class="btn btn-primary" value="Update" disabled="@(URLData.PartitionKey == null)" />
    </EditForm>
}

@code {
    [Parameter]
    public string? Url { get; set; }
    private string LoadMessage = "Loading details...";

    private RedirectURL URLData;
    private EditContext editContext;
    private string LastSubmitResult;

    protected override async Task OnInitializedAsync()
    {
        TableResponse<RedirectURL> resp = await RedirectDataService.GetUrlDetails(Url);
        if(resp.Success)
        {
            URLData = resp.Value;
            editContext = new EditContext(URLData);
        }
        else
        {
            LoadMessage = "Failed to load details: " + resp.Message;
        }
    }

    async void HandleValidSubmit(EditContext editContext)
    {
        TableResponse response = await RedirectDataService.SaveUrl(URLData);
        if (response.Success)
        {
            LastSubmitResult = "Redirect URL updated successfully.";
        }
        else
        {
            LastSubmitResult = "Error updating Redirect URL: " + response.Message;
        }
        StateHasChanged();
    }

    async void DeleteEntity(RedirectURL url)
    {
        TableResponse response = await RedirectDataService.DeleteUrl(url);
        if (response.Success)
        {
            LastSubmitResult = "Deleted URL successfully.";
        }
        else
        {
            LastSubmitResult = "Error deleting Redirect URL: " + response.Message;
        }
        URLData = new RedirectURL();
        StateHasChanged();
    }
}
