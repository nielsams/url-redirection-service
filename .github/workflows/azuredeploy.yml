# This is a basic workflow to help you get started with Actions

name: AzureDeploy

env:
  # This is the global resource prefix for this deployment
  # Use lower case letters and numbers only
  DEPLOYMENT_NAME: "nbredir"

  # Azure region to which the resources will be deployed
  DEPLOYMENT_REGION: "westeurope"

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
    build:
        runs-on: ubuntu-latest
        name: 'Build Projects'
        steps:
        # checkout the repo
        - name: 'Checkout GitHub Action'
          uses: actions/checkout@main
          
        - name: 'Login via Azure CLI'
          uses: azure/login@v1
          with:
            creds: ${{ secrets.AZURE_CREDENTIALS }}
            enable-AzPSSession: true 
        
        - name: 'Repository Login'
          uses: azure/docker-login@v1
          with:
            login-server: ${{ secrets.AZURE_ACR_REGISTRY }}
            username: ${{ secrets.AZURE_ACR_USERNAME }}
            password: ${{ secrets.AZURE_ACR_PASSWORD }}
          
        - name: Build and Push Redirector Image
          run: |
            cd app
            docker build . -t ${{ secrets.AZURE_ACR_REGISTRY }}/redirector:${{ github.sha }}
            docker push ${{ secrets.AZURE_ACR_REGISTRY }}/redirector:${{ github.sha }}

        - name: Build and Push Admin Image
          run: |
            cd adminapp
            docker build . -t ${{ secrets.AZURE_ACR_REGISTRY }}/redirectadmin:${{ github.sha }}
            docker push ${{ secrets.AZURE_ACR_REGISTRY }}/redirectadmin:${{ github.sha }}

        - name: Setup DotNet ${{ env.DOTNET_VERSION }} Environment
          uses: actions/setup-dotnet@v1
          with:
            dotnet-version: latest

        - name: Build Azure Function
          shell: bash
          run: |
            pushd './redirectfunction'
            dotnet build --configuration Release --output ./output
            popd

    deploy-infra: 
        runs-on: ubuntu-latest
        name: 'Deploy Infra'
        needs: [build]

        - name: 'Checkout GitHub Action'
          uses: actions/checkout@main
          
        - name: 'Login via Azure CLI'
          uses: azure/login@v1
          with:
            creds: ${{ secrets.AZURE_CREDENTIALS }}
            enable-AzPSSession: true 

        - name: Deploy Azure Resources
          uses: azure/powershell@v1
          with: 
            inlineScript: |
              $params = @{
                customDomain = "${{ secrets.AZUREDEPLOY_CUSTOM_DOMAIN }}";
                adminDomain = "${{ secrets.AZUREDEPLOY_ADMIN_DOMAIN }}";
                name = "${{env.DEPLOYMENT_NAME}}";
                redirectorContainerImage = "${{ secrets.AZURE_ACR_REGISTRY }}/redirector:${{ github.sha }}";
                adminContainerImage = "${{ secrets.AZURE_ACR_REGISTRY }}/redirectadmin:${{ github.sha }}";
                acrServer = "${{ secrets.AZURE_ACR_REGISTRY }}";
                acrUser = "${{ secrets.AZURE_ACR_USERNAME }}";
                acrPassword = "${{ secrets.AZURE_ACR_PASSWORD }}";
                resourceGroupName = "${{ secrets.AZUREDEPLOY_RESOURCEGROUP }}";
                adminClientId = "${{ secrets.AZUREDEPLOY_ADMIN_CLIENTID }}";
                adminTenantId = "${{ secrets.AZUREDEPLOY_ADMIN_TENANTID }}";
                adminAuthDomain = "${{ secrets.AZUREDEPLOY_ADMIN_AUTHDOMAIN }}";
              }

              $deploy = New-AzDeployment -Name "${{env.DEPLOYMENT_NAME}}" -TemplateFile "template/main.bicep" -TemplateParameterObject $params -Location ${{env.DEPLOYMENT_REGION}}
              # Save the outputs from the deployment
              $outputsJson = $res.Outputs | ConvertTo-Json -Depth 10
              $outputsJson | Out-File deploymentOutput.json
            azPSVersion: 'latest'

        - name: Save deployment output
          uses: actions/upload-artifact@v2
          with:
            name: deploymentOutput
            path: deploymentOutput.json

    publish-function: 
        runs-on: ubuntu-latest
        name: 'Deploy Azure Function'
        needs: [build, deploy-infra]

        - uses: actions/download-artifact@v2
          with:
            name: deploymentOutput

        - name: 'Get function name from deployment'
          id: function-metadata
          uses: azure/powershell@v1
          with: 
            azPSVersion: "latest"
            inlineScript: |
              $deploymentOutput = Get-Content deploymentOutput.json | ConvertFrom-Json -Depth 10
              $functionName = $deploymentOutput.function_name.Value
              echo "::set-output name=function_name::$functionName"

        - name: Deploy Azure Function
          uses: Azure/functions-action@v1
          with:
            app-name: ${{ steps.function-metadata.outputs.function_name }}
            package: 'redirectfunction'

